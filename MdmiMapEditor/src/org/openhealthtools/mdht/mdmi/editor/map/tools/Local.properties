#
#  Property Names
#
# key = value
#  where "key" is in the form className.function, and 
#  "value" is a string to be displayed to a user. The "value" string
#  may contain formatting parameters as well - for example:
#  "At {1,time} on {1,date}, there was {2} on planet {0,number,integer}."
#

#################################################
SearchDialog.title = Search for Elements 
SearchDialog.name        = Name
SearchDialog.description = Description
SearchDialog.rule        = Rule

SearchDialog.searchTextLabel = Search Text:
SearchDialog.searchHint      = (* = any string)
SearchDialog.searchInLabel   = Search In

SearchDialog.caseSensitive   = Case sensitive
SearchDialog.searchTypesLabel = Search Element Types

SearchDialog.noMatchFound = No elements with ''{0}'' in the {1} were found
SearchDialog.matchesFound = Found {0} matches for ''{1}''.

#################################################
ViewDataObject.title = View of {0} ''{1}''
ViewDataObject.multiTitle = View of Multiple Items
ViewDataObject.print = Print
ViewDataObject.openFormat  = Open {0}

#################################################
ViewDatatype.derivedLabel = {0} ({1})
ViewDatatype.fieldLabel   = + {0} : {1}
#################################################

ViewDatatypeTree.multiTitle = View Datatypes
ViewDatatypeTree.viewDatatypes = View Datatypes
ViewDatatypeTree.datatypes = Data Types
ViewDatatypeTree.fieldFormat   = {0} : {1}

#################################################

ViewDatatypeUsageTree.viewDatatypes = View Datatype Usage
ViewDatatypeUsageTree.title = View Usage of {0} ''{1}''

#################################################

ViewDatatypeUsageSummary.showUsage = Datatype Usage Summary
ViewDatatypeUsageSummary.datatype  = Datatype
ViewDatatypeUsageSummary.usage     = Where Used
ViewDatatypeUsageSummary.messageModel  = Message Model
ViewDatatypeUsageSummary.bizElementRef = Business Element Reference
ViewDatatypeUsageSummary.notUsed       = \ --  Not Used

ViewDatatypeUsageSummary.usageDetailsFormat     = Show ''{0}'' usage details
#################################################

ModelTree.expandAll    = Expand All
ModelTree.collapseAll   = Collapse All

#################################################
DatatypeToNodeTable.datatypeCol	= Datatype
DatatypeToNodeTable.syntaxCol		= Syntax Element
DatatypeToNodeTable.formatCol		= Format
DatatypeToNodeTable.locationCol	= Location

#################################################
DatatypeToNodeMap.noNodeForDatatypeMsg  = There is no syntax element for {0}.
DatatypeToNodeMap.wrongParentTypeMsg    = Unable to add a new {0} to a {1} syntax element.
DatatypeToNodeMap.cannotCreateNodeMsg   = Cannot create a syntax element for {0} ({1}).
DatatypeToNodeMap.cannotChangeTypeMsg   = Unable to change {0} from a {1} to a {2}.
DatatypeToNodeMap.cannotFindTreeNodeMsg = Unable to find {0} {1} in the selection tree. The selection tree has not been updated.

DatatypeToNodeMap.wrongNodeTypeMsg      = Existing syntax element, {0}, is a {1}. The correct element type for a {2} is {3}.
DatatypeToNodeMap.changeNodeTypeTitle   = Change Type
DatatypeToNodeMap.changeNodeTypeMsg     = {0}\n\nDo you want to change it to a {1}?

#################################################

ViewSemanticElement.title     = View of From/To MDMI Elements for {0} ''{1}''
ViewSemanticElement.multiTitle  = View of From/To MDMI Elements
ViewSemanticElement.fromMdmi  = From MDMI Element
ViewSemanticElement.toMdmi    = To MDMI Element
ViewSemanticElement.fromTitle  = From MDMI Elements
ViewSemanticElement.toTitle    = To MDMI Elements
ViewSemanticElement.parentsTitle = Semantic Element {0, choice, 1#Parent|1<Parents}

#################################################

ViewSemanticElementRelationships.title     = View of Relationships for {0} ''{1}''
ViewSemanticElementRelationships.multiTitle    = Semantic Element Relationships
ViewSemanticElementRelationships.relationships    = Relationships

#################################################

ViewSemanticElementHeirarchy.title         = View of Children for {0} ''{1}''
ViewSemanticElementHeirarchy.multiTitle    = Semantic Element Children
ViewSemanticElementHeirarchy.children	    = Semantic Element Children

#################################################

ViewSyntaxNode.semanticElementName	    = Semantic Element "{0}"
ViewSyntaxNode.fieldName	    			 = Field Name "{0}"

#################################################

ViewDatatypeSyntax.title  = Syntax elements for {0} ''{1}''
ViewDatatypeSyntax.multiTitle  = Semantic Element Syntax Elements
ViewDatatypeSyntax.generateButton = Generate
ViewDatatypeSyntax.generateToolTip = Generate Syntax Elements for all datatypes referenced by this Semantic Element

#################################################
ModelIOUtilities.fileTypesDescription  = XMI or CSV files

ModelIOUtilities.writeTitle   = Save the Model Data
ModelIOUtilities.fileExists   = The file {0} already exists.\n\nDo you want to replace the existing file?
ModelIOUtilities.writeSucceededFormat   = The changes have been saved to {0}.

ModelIOUtilities.readTitle   = Select the data file, or the directory containing the data files

ModelIOUtilities.notSupportedTitle		     =  Not Supported
ModelIOUtilities.readNotSupportedMsgFormat  =  Reading {0} files is not supported at this time
ModelIOUtilities.writeNotSupportedMsgFormat =  Writing {0} files is not supported at this time

ModelIOUtilities.alreadyExists = already exists
ModelIOUtilities.replaceExists = has been replaced
ModelIOUtilities.typeConflictFormat = {0}. Cannot replace with a {1}

ModelIOUtilities.importedDataTitle  =  Imported Data
ModelIOUtilities.importedDataMsg    =  There are existing datatypes or dictionary elements that were created by importing data.\nDo you want to keep the imported elements?

#################################################

ViewObjectDescriptions.title              = Element Descriptions for Message Group {0}
ViewObjectDescriptions.nameColumn			= Name
ViewObjectDescriptions.descriptionColumn	= Description
ViewObjectDescriptions.datatypesHeading    = Data Types
ViewObjectDescriptions.messageModelHeading = Message Model {0}
ViewObjectDescriptions.domainDictionaryHeading = Domain Dictionary
ViewObjectDescriptions.semanticElementsHeading = Semantic Elements
ViewObjectDescriptions.syntaxModelHeading      = Message Syntax Model

#################################################

DatatypeSelectionDialog.title = Select Data Types
DatatypeSelectionDialog.messageGroup = Message Group:
DatatypeSelectionDialog.selectTitle = Select one or more Data Types
DatatypeSelectionDialog.noSelectionTitle   = Nothing Selected
DatatypeSelectionDialog.noSelectionMessage = Nothing has been selected.\nPlease select one or more datatypes.

#################################################
SemanticElementSelectionDialog.title = Select Semantic Elements
SemanticElementSelectionDialog.messageGroup = Message Group:
SemanticElementSelectionDialog.messageModel = Message Model:
SemanticElementSelectionDialog.selectTitle  = Select one or more Semantic Elements
SemanticElementSelectionDialog.noSelectionTitle   = Nothing Selected
SemanticElementSelectionDialog.noSelectionMessage = Nothing has been selected.\nPlease select one or more datatypes.

#################################################

SpreadSheetModelBuilder.headerExpected       = Header expected for first line
SpreadSheetModelBuilder.noDatatype           = No DataType defined."
SpreadSheetModelBuilder.noDatatypeForField   = No DataType defined for Field Name ''{0}''


#################################################
GenerateToFromElementsDialog.title = Generate To/From Elements
GenerateToFromElementsDialog.messageGroup = Message Group:
GenerateToFromElementsDialog.messageModel = Message Model:
GenerateToFromElementsDialog.direction = Direction:
GenerateToFromElementsDialog.toBE   = SE to BER
GenerateToFromElementsDialog.toMdmi = BER to SE
GenerateToFromElementsDialog.businessElement  = Business Element:
GenerateToFromElementsDialog.name  = Name:
GenerateToFromElementsDialog.semanticElement  = Semantic Element
GenerateToFromElementsDialog.businessElement  = Business Element
GenerateToFromElementsDialog.dataType  = Data Type:
GenerateToFromElementsDialog.fieldName = Field Name:

#################################################
GenerateTypeSpecDialog.title = Generate Type Spec
GenerateTypeSpecDialog.datatypeName = Type Name:
GenerateTypeSpecDialog.valueSet = Value Set:
GenerateTypeSpecDialog.domainName = Domain Name:
GenerateTypeSpecDialog.typeSpec = Type Spec:

